{"version":3,"sources":["Components/Wrapp/Main/Cases/Case/Case.module.css","Components/Wrapp/Header/Header.module.css","Components/Wrapp/Header/Logo/Logo.module.css","Components/Wrapp/Main/Main.module.css","Components/Wrapp/Main/Cases/Cases.module.css","Components/Wrapp/Wrapp.module.css","Components/Wrapp/Header/Logo/Logo.jsx","Components/Wrapp/Header/Header.jsx","Components/Wrapp/Main/WriteText/WriteText.jsx","Components/Wrapp/Main/Cases/Case/Case.jsx","Components/Wrapp/Main/Cases/Cases.jsx","Components/Wrapp/Main/Main.jsx","Components/Wrapp/Wrapp.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Logo","className","css","logoTitle","logo","Header","countDoneCases","header","Container","Row","Col","xs","sm","caseCounter","WriteText","value","handleChange","isEnterPress","addToList","InputGroup","size","Input","onChange","onKeyPress","placeholder","maxLength","InputGroupAddon","addonType","Button","color","onClick","Case","index","text","deleteCase","id","setCountDoneCases","caseBlock","case","countCase","choiceBlock","trashBlock","doneBlock","prev","doneCase","Cases","list","setList","useEffect","initList","localStorage","getItem","JSON","parse","setItem","stringify","listOfCases","map","elem","Main","useState","setValue","main","contentWrapper","e","target","trim","Date","now","key","filter","Wrapp","valueOfDoneCases","Number","console","log","String","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.026d5f3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"caseBlock\":\"Case_caseBlock__1Sbvd\",\"case\":\"Case_case__L3vuz\",\"countCase\":\"Case_countCase__26KZY\",\"trash\":\"Case_trash__2OIqL\",\"trashBlock\":\"Case_trashBlock__rZwIB\",\"choiceBlock\":\"Case_choiceBlock__28A-R\",\"deleteCase\":\"Case_deleteCase__YbWMf\",\"doneBlock\":\"Case_doneBlock__2JQP4\",\"doneCase\":\"Case_doneCase__ZPZt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__29Llj\",\"caseCounter\":\"Header_caseCounter__wiicB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoTitle\":\"Logo_logoTitle__2vIxp\",\"logo\":\"Logo_logo__1QA_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3_ogJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cases_list__1gtXF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapp\":\"Wrapp_Wrapp__1n_Ve\"};","import React from \"react\";\r\nimport css from './Logo.module.css'\r\n\r\nexport const Logo = () => {\r\n  return (\r\n    <div>\r\n      <p className={css.logoTitle}>\r\n        напиши свой <span className={css.logo}>To do list</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport css from \"./Header.module.css\";\r\nimport { Logo } from \"./Logo/Logo\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Header = ({countDoneCases}) => {\r\n  return (\r\n    <div className={css.header}>\r\n      <Container>\r\n        <Row>\r\n          <Col xs=\"12\" sm=\"9\">\r\n            <Logo />\r\n          </Col>\r\n          <Col xs=\"12\" sm=\"3\">\r\n            <div className={css.caseCounter}>\r\n              <p>дел выполнено: <span >{countDoneCases} </span></p>\r\n            </div>  \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  countDoneCases: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport { InputGroupAddon, Input, InputGroup, Button } from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const WriteText = ({value, handleChange, isEnterPress, addToList}) => {\r\n  return (\r\n    <InputGroup size=\"normal\">\r\n      <Input\r\n        value={value}\r\n        onChange={handleChange}\r\n        onKeyPress={isEnterPress}\r\n        placeholder=\"Что вы планируете сделать?\"\r\n        maxLength='150'\r\n      />\r\n      <InputGroupAddon addonType=\"append\">\r\n        <Button color=\"info\" onClick={addToList}>\r\n          Записать\r\n        </Button>\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nWriteText.propTypes = {\r\n  handleChange: PropTypes.func,\r\n  addToList: PropTypes.func,\r\n  value: PropTypes.string,\r\n  isEnterPress: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport css from \"./Case.module.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Case = ({ index, text, deleteCase, id, setCountDoneCases }) => {\r\n  return (\r\n    <div key={index} className={css.caseBlock}>\r\n      <Row>\r\n        <Col>\r\n          <p className={css.case}>\r\n            {\" \"}\r\n            <span className={css.countCase}>{index + 1}.</span> {text}{\" \"}\r\n          </p>\r\n        </Col>\r\n        <Col xs=\"auto\" className={css.choiceBlock}>\r\n          <div className={css.trashBlock}>\r\n            <li\r\n              className={\"fa fa-trash fa-2x\"}\r\n              onClick={() => {\r\n                deleteCase(id);\r\n              }}\r\n            >\r\n              <span className={css.deleteCase}>Удалить</span>\r\n            </li>\r\n          </div>\r\n          <div\r\n            className={css.doneBlock}\r\n            onClick={() => {\r\n              setCountDoneCases((prev) => prev + 1)\r\n              deleteCase(id)       \r\n            }\r\n          }\r\n          >\r\n            <i className={\"fa fa-check fa-2x\"}></i>\r\n            <div className={css.doneCase}>Дело сделано</div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nCase.propTypes = {\r\n  index: PropTypes.number,\r\n  text: PropTypes.string,\r\n  deleteCase: PropTypes.func,\r\n  id: PropTypes.number,\r\n  setCountDoneCases: PropTypes.func,\r\n};\r\n","import React, { useEffect} from \"react\";\r\nimport css from \"./Cases.module.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Case } from \"./Case/Case\";\r\n\r\n\r\nexport const Cases = ({list, setList, deleteCase, setCountDoneCases}) => {\r\n  useEffect(() => {\r\n    let initList = localStorage.getItem(\"list\") || JSON.parse([]);\r\n    setList(JSON.parse(initList));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"list\", JSON.stringify(list));\r\n  }, [list]);\r\n\r\n  let listOfCases = list.map((elem, index) => {\r\n    return <Case key={index} deleteCase={deleteCase} text={elem.text} id={elem.id} index={index}\r\n    setCountDoneCases={setCountDoneCases}/>\r\n  });\r\n\r\n  return  <div className={css.list}>\r\n    { listOfCases }\r\n    </div>\r\n}\r\n\r\nCases.propTypes = {\r\n  list: PropTypes.array,\r\n  setList: PropTypes.func,\r\n  deleteCase: PropTypes.func,\r\n  setCountDoneCases: PropTypes.func,\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport css from \"./Main.module.css\";\r\nimport { WriteText } from \"./WriteText/WriteText\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { Cases } from \"./Cases/Cases\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Main = ({setCountDoneCases}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const isEnterPress = (e) => {\r\n    if (!value || !value.trim()) {\r\n      return false;\r\n    }\r\n    if (e.key === \"Enter\") {\r\n      setList([\r\n        ...list,\r\n        {\r\n          id: Date.now(),\r\n          text: value,\r\n        },\r\n      ]);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const addToList = () => {\r\n    if (!value || !value.trim()) {\r\n      return false;\r\n    }\r\n    setList([\r\n      ...list,\r\n      {\r\n        id: Date.now(),\r\n        text: value,\r\n      },\r\n    ]);\r\n    setValue(\"\");\r\n  };\r\n\r\n  const deleteCase = (id) => {\r\n    setList(list.filter((elem) => elem.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className={css.main}>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className={css.contentWrapper}>\r\n              <WriteText\r\n                handleChange={handleChange}\r\n                addToList={addToList}\r\n                isEnterPress={isEnterPress}\r\n                value={value}\r\n              />\r\n              <Cases \r\n                list={list}\r\n                setList={setList}\r\n                deleteCase={deleteCase}\r\n                setCountDoneCases={setCountDoneCases}\r\n             />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  setCountDoneCases: PropTypes.func,\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Header } from './Header/Header'\r\nimport { Main } from './Main/Main'\r\nimport css from './Wrapp.module.css'\r\n\r\nconst Wrapp = () => {\r\n    const [countDoneCases, setCountDoneCases] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        let valueOfDoneCases = localStorage.getItem('doneCases') || 0\r\n        setCountDoneCases(Number(valueOfDoneCases))\r\n        console.log(countDoneCases)\r\n        console.log(valueOfDoneCases)      \r\n    },[])\r\n    useEffect(()=>{\r\n       localStorage.setItem('doneCases', String(countDoneCases))   \r\n    },[countDoneCases])\r\n\r\n    return (\r\n        <div className={css.Wrapp}>\r\n             <Header countDoneCases={countDoneCases}/>\r\n             <Main setCountDoneCases={setCountDoneCases}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapp","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Wrapp from './Components/Wrapp/Wrapp';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <Wrapp />\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}